<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mapper.SchoolMapper">
    <resultMap id="BaseResultMap" type="com.study.domain.School">
        <constructor>
            <idArg column="SchoolId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="schoolname" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="StudentIds" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.study.domain.School">
        <constructor>
            <idArg column="SchoolId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="schoolname" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="StudentIds" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
        <collection property="studentList" ofType="com.study.domain.Student">
            <id property="studentid" column="StudentId" jdbcType="INTEGER"/>
            <result property="studentname" column="StudentName" jdbcType="VARCHAR"/>
            <result property="schoolids" column="SchoolIds" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <select id="SchoolStudentList" resultMap="BaseResultMap2">
           select *  from Student s
          join School sl  on s.schoolids=sl.schoolid
           where sl.SchoolId=#{schoolid,jdbcType=INTEGER};
  </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    SchoolId, schoolname, StudentIds
  </sql>
    <select id="selectByExample" parameterType="com.study.domain.SchoolExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from School
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from School
        where SchoolId = #{schoolid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from School
    where SchoolId = #{schoolid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.study.domain.SchoolExample">
        delete from School
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.study.domain.School">
    insert into School (SchoolId, schoolname, StudentIds
      )
    values (#{schoolid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR}, #{studentids,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.study.domain.School">
        insert into School
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="schoolid != null">
                SchoolId,
            </if>
            <if test="schoolname != null">
                schoolname,
            </if>
            <if test="studentids != null">
                StudentIds,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="schoolid != null">
                #{schoolid,jdbcType=INTEGER},
            </if>
            <if test="schoolname != null">
                #{schoolname,jdbcType=VARCHAR},
            </if>
            <if test="studentids != null">
                #{studentids,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.study.domain.SchoolExample" resultType="java.lang.Long">
        select count(*) from School
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update School
        <set>
            <if test="record.schoolid != null">
                SchoolId = #{record.schoolid,jdbcType=INTEGER},
            </if>
            <if test="record.schoolname != null">
                schoolname = #{record.schoolname,jdbcType=VARCHAR},
            </if>
            <if test="record.studentids != null">
                StudentIds = #{record.studentids,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update School
        set SchoolId = #{record.schoolid,jdbcType=INTEGER},
        schoolname = #{record.schoolname,jdbcType=VARCHAR},
        StudentIds = #{record.studentids,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.study.domain.School">
        update School
        <set>
            <if test="schoolname != null">
                schoolname = #{schoolname,jdbcType=VARCHAR},
            </if>
            <if test="studentids != null">
                StudentIds = #{studentids,jdbcType=INTEGER},
            </if>
        </set>
        where SchoolId = #{schoolid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.study.domain.School">
    update School
    set schoolname = #{schoolname,jdbcType=VARCHAR},
      StudentIds = #{studentids,jdbcType=INTEGER}
    where SchoolId = #{schoolid,jdbcType=INTEGER}
  </update>
</mapper>